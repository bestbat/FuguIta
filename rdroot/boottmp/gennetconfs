#!/bin/sh

#==================================================
# gennetconfs - generate network coniguration files
#
# $Id: gennetconfs,v 1.7 2021/05/21 01:35:16 kaw Exp $
#==================================================

# Copyright (c) 2006--2021
# Yoshihiro Kawamata
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#
#   * Neither the name of Yoshihiro Kawamata nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

basedir=/etc/netconfs

# addvar name [arg1 arg2 ...]
#
#    add trailing args 'arg1 arg2 ...'
#    to variable 'name' followed by EoL
#                       ~~~~~~~~~~~~~~~
addvar () {
    [ -z "$1" ] && return
    local _name="$1"; shift;
    eval "${_name}=\"\$${_name}\"\"$*\"\"\\n\""
}

#-----------------------
# set target directory
#
if [ -n "$1" ]; then
    if [ "$1" = "templ" ]; then
	echo "$0: You cannot create configs in $1" >&2
        exit 1
    fi
    confdir="$basedir/$1"
    mkdir -p "$confdir"
    cd "$confdir" || exit 1
fi

#-----------------------
# host name
#
echo -n 'host name (without domain) -> '; read myhost
if [ X"$myhost" = X ]; then
    myhost=fuguita
fi
addvar etc_myname "$myhost"

# get net i/f's
#
ifconfig_out=`ifconfig -a`
nicifs=`echo "$ifconfig_out" | grep ' mtu 1500$' | cut -d: -f1`

#-----------------------
# IP protocol versions
#
if [ X"$nicifs" = X ]; then
    echo 'No available network interfaces found.'
    ipv='n'
else
    set - $nicifs
    nicifs="$@"
    defnic="$1"
    echo 'IP version(s) to use: 4, 6, 46, 64 or n'
    echo "  46: IPv4 preferred over IPv6 in address resolution"
    echo "  64: reversed to 46"
    echo "   n: stand alone operation"
    echo -n '[46]-> '; read ipv
    ipv=`echo -n $ipv | tr -dc '46Nn' | tr N n`
    case "$ipv" in
        *4*6*) ipv='46'; af='family inet4 inet6' ;;
        *6*4*) ipv='64'; af='family inet6 inet4' ;;
        *4*)   ipv='4';  af='family inet4' ;;
        *6*)   ipv='6';  af='family inet6' ;;
        *n*)   ipv='n';  af='' ;;
        *)     echo "'46' selected as default"
               ipv='46'; af='family inet4 inet6' ;;
    esac
fi

#-----------------------
# loopback in any case
#
addvar etc_hosts '127.0.0.1 localhost'
addvar etc_hosts '::1       localhost'

case X"$ipv" in
    #-----------------------
    # IP-generic configs
    #
    X*[46]*)
        echo "==[ifconfig -a]========================="
        echo "$ifconfig_out"
        echo "========================================"
        echo "Available network interface(s): $nicifs"
        echo -n "network interface to setup [$defnic] -> "; read mynic
        if [ X"$mynic" = X ]; then
            mynic=$defnic
        fi
        
        #-----------------------
        # host names
        #
        echo -n "FQDN of this host -> ${myhost}."; read mydomain
        if [ -n "$mydomain" ]; then
            myfqdn=${myhost}.${mydomain}
            addvar etc_resolv_conf "search $mydomain"
            etc_myname="$myfqdn\n"
        fi

        #-----------------------
        # wireless settings
        #
        if ifconfig "$mynic" 2>/dev/null | grep -q 'groups:.*wlan'; then
            wlan=''
            echo -n 'Wi-Fi SSID -> '; read ssid
            if [ -n "$ssid" ]; then
                wlan="nwid $ssid"
                echo -n '   WPA Key -> '; read wpakey
                if [ -z "$wpakey" ]; then
                    echo -n '   WEP Key -> '; read wepkey
                    if [ -n "$wepkey" ]; then
                        wlan="$wlan nwkey $wepkey"
                    fi
                else
                    wlan="$wlan wpakey $wpakey"
                fi
            fi
            if [ -n "$wlan" ]; then
                addvar etc_hostname_if "$wlan"
            fi
        fi

        #-----------------------
        # name resolutions
        #
        echo 'DNS setup;'
        echo '  Manual : Enter up to three IPv4/IPv6 addresses, separated by spaces'
        echo '  DHCP   : Just press ENTER .'
        echo '  no DNS : Enter "none".'
        echo -n '-> '; read mydns

        mydns=`echo -n $mydns | tr -cs '0-9A-Za-z:.%' ' '`

        if [ X"$mydns" = X -o X"$mydns" = Xdhcp ]; then
            addvar etc_resolv_conf 'lookup file bind'
            addvar etc_resolv_conf "$af"
            etc_resolv_conf_tail=$etc_resolv_conf
            unset etc_resolv_conf

            #-----------------------
            # IPv4 configs
            #
            case X"$ipv" in
                X*4*)
                    addvar etc_hostname_if 'dhcp'
                    ;;
            esac
        else
            if [ X"$mydns" == Xnone ]; then
                addvar etc_resolv_conf 'lookup file'
            else
                addvar etc_resolv_conf "lookup file bind"
                addvar etc_resolv_conf "$af"
                set -- $mydns
                [ -n "$1" ] && addvar etc_resolv_conf "nameserver $1"
                [ -n "$2" ] && addvar etc_resolv_conf "nameserver $2"
                [ -n "$3" ] && addvar etc_resolv_conf "nameserver $3"
            fi

            #-----------------------
            # IPv4 configs
            #
            case X"$ipv" in
                X*4*)
                    echo -n 'IPv4 addr of this host -> '; read myv4addr
                    echo -n 'netmask                -> '; read mynetmask
                    echo -n 'default route          -> '; read mygw

                    addvar etc_hostname_if "inet $myv4addr $mynetmask NONE"
                    addvar etc_mygate "$mygw"
                    addvar etc_hosts "$myv4addr $myfqdn ${myfqdn%%.*}"
                    ;;
            esac
        fi

        #-----------------------
        # IPv6 configs
        #
        case X"$ipv" in
            X*6*)
                addvar etc_hostname_if 'inet6 autoconf'
                ;;
        esac
        ;;
esac

#-----------------------
#  resolving myhost
#    This is for smtpd
#
if ! echo $etc_hosts | grep -q "$myhost"
then
    addvar etc_hosts "127.0.0.1 $myhost"
    addvar etc_hosts "::1       $myhost"
fi

#-----------------------
# all config for forwarding are fixed
#
if [ -r "$basedir/templ/sysctl.conf" ]; then
    etc_sysctl_conf="$(cat $basedir/templ/sysctl.conf)"
fi
etc_sysctl_conf="${etc_sysctl_conf}\n$(cat<<EOT
net.inet.ip.forwarding=0
net.inet.ip.mforwarding=0
net.inet6.ip6.forwarding=0
net.inet6.ip6.mforwarding=0
EOT
               )"

#-----------------------
# emit config files
#
#  files to configure:
#    /etc/myname
#    /etc/mygate
#    /etc/hosts
#    /etc/hostname.if
#    /etc/resolv.conf
#    /etc/resolv.conf.tail
#    /etc/sysctl.conf
#

debug=0
if [ 1 -le "$debug" ]; then
    outbuf=$(cat<<EOT
======etc_myname=================
$etc_myname
======etc_mygate=================
$etc_mygate
======etc_hosts==================
$etc_hosts
======etc_hostname_if============
$etc_hostname_if
======etc_resolv_conf============
$etc_resolv_conf
======etc_resolv_conf_tail=======
$etc_resolv_conf_tail
======etc_sysctl_conf============
$etc_sysctl_conf
=================================

EOT
          )
    echo "$outbuf"
fi

# -- file modifications-------------------------------------------------
#

# /etc/myname
echo -n "$etc_myname" > myname

# /etc/mygate
if [ -n "$etc_mygate" ];then
    echo -n "$etc_mygate" > mygate
else
    rm -f mygate
fi
echo -n "$etc_hosts" > hosts

# /etc/hostname.if
pid=$$

# rename stale hostname_if to disable it
#
for hostname_if in $(ls -1d * | egrep '^hostname\.[a-z]+[0-9]+'); do
    mv "$hostname_if" "DISABLED.${pid}.${hostname_if}"
    chmod 0640 "DISABLED.${pid}.${hostname_if}"
done

if [ -n "$mynic" ]; then
    echo -n "$etc_hostname_if" > "hostname.${mynic}"
    chmod 0640 "hostname.${mynic}"
fi

# resolv.conf
echo -n "$etc_resolv_conf" > resolv.conf

# resolv.conf.tail
if [ -n "$etc_resolv_conf_tail" ];then
    echo -n "$etc_resolv_conf_tail" > resolv.conf.tail
else
    rm -f resolv.conf.tail
fi

# sysctl.conf
if [ -f sysctl.conf ]; then
    mv sysctl.conf DISABLED.${pid}.sysctl.conf
fi

echo "$etc_sysctl_conf" > sysctl.conf  # note that no "-n"

#
# -- end of file modifications------------------------------------------
